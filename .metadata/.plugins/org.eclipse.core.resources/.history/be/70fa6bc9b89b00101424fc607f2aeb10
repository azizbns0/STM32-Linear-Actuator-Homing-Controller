/*
 * hw_simulation.c
 *
 *  Created on: Sep 25, 2025
 *      Author: azizb
 */


#include "homing_porting.h"
#include "stm32f4xx_hal.h"
#include <stdbool.h>

// Simulation state
static uint32_t move_start = 0;
static bool moving_left = false;
static bool moving_right = false;
static bool left_switch = false;
static bool right_switch = false;

// Travel times
#define TIME_TO_LEFT_MS       2000   // 2s to reach left switch
#define TIME_TO_RIGHT_MS      4000   // 4s to reach right switch (from left)
#define TIME_BACK_TO_LEFT_MS  3000   // 3s to go back left (from right)

static bool from_right = false;  // track direction of return

uint32_t HW_GetTickMs(void) { return HAL_GetTick(); }

bool HW_LeftSwitchRaw(void)  { return left_switch; }
bool HW_RightSwitchRaw(void) { return right_switch; }

void HW_ActuatorMoveLeft(void) {
    moving_left = true;
    moving_right = false;
    move_start = HAL_GetTick();
    left_switch = right_switch = false;
    from_right = true;   // we are going back from right
}

void HW_ActuatorMoveRight(void) {
    moving_left = false;
    moving_right = true;
    move_start = HAL_GetTick();
    left_switch = right_switch = false;
    from_right = false;  // normal trip to right
}

void HW_ActuatorStop(void) {
    moving_left = false;
    moving_right = false;
}

void HW_SimulationUpdate(uint32_t now) {
    uint32_t elapsed = now - move_start;

    if (moving_left) {
        if (from_right) {
            // Returning left after measuring right
            if (elapsed >= TIME_BACK_TO_LEFT_MS) {
                left_switch = true;
                moving_left = false;
            }
        } else {
            // Initial homing to left
            if (elapsed >= TIME_TO_LEFT_MS) {
                left_switch = true;
                moving_left = false;
            }
        }
    }

    if (moving_right) {
        if (elapsed >= TIME_TO_RIGHT_MS) {
            right_switch = true;
            moving_right = false;
        }
    }
}
